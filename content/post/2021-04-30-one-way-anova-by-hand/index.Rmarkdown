---
title: One-way ANOVA by hand
author: 'David Hodge'
date: '2021-04-30'
slug: one-way-anova-by-hand
categories: ["R"]
tags: ["R"]
---

One-way ANOVA is a test used to assess whether there is a statistically significant difference between the mean of different levels of a factor.

There is 1 response numeric variable and 1 explanatory categorical variable with more than 1 level.

ANOVA considers the probability of observing the sample ratio of explained variance to unexplained variance (i.e. the F statistic)... if the null hypothesis is true that all population means are equal.

You can perform a one-way ANOVA very easily in R using the `aov` function etc. But what fun would be that?! 

On a serious note, it is really helpful for understanding to see how the algorathm of the test works to calculate it 'by hand'.

First, let's load some libraries and sample data.

```{r, message=F, warning=F}
library(tidyverse)
library(tidymodels)
library(simplevis)

cat_var <- rep(c(8, 16, 32, 64), each = 8)

num_var <- c(1.4, 2.0, 3.2, 1.4, 2.3, 4.0, 5.0, 4.7,
           3.2, 6.8, 5.0, 2.5, 6.1, 4.8, 4.6, 4.2,
           6.2, 3.1, 3.2, 4.0, 4.5, 6.4, 4.4, 4.1,
           5.8, 6.6, 6.5, 5.9, 5.9, 3.0, 5.9, 5.6)

data <- tibble(cat_var, num_var) %>% 
  mutate(cat_var = as.factor(cat_var))

head(data, n = 3)
```

Next, let's visualise the data.

```{r, message=F, warning=F}
ggplot_boxplot(data, cat_var, num_var,
       title = NULL,
       x_title = "Catagorical explanatory variable", 
       y_title = "Numeric response variable")
```

I'm going to use a fixed effects means model for simplicity (Model I).

Yij = Î¼i + Eij 

The hypotheses are as follow.

H0: _all_ population means are equal

H1: _not all_ population means are equal

We will use a significance level of p = 0.05.

1. Calculate SSE, df and MSE for if H1 is TRUE (i.e. complete model)

```{r, message = FALSE, warning = FALSE}
complete <- data %>%  
  group_by(cat_var) %>% 
  mutate(fit = mean(num_var)) %>% #in complete model, fit is the group mean 
  mutate(error = fit - num_var) %>% 
  mutate(sq_error = error ^ 2) %>%
  ungroup()

head(complete, 3)

(complete <- complete %>% 
  summarise(n = n(), sse = sum(sq_error)) %>% 
  mutate(p = length(unique(data$cat_var))) %>% 
  mutate(df = n - p) %>% 
  select(sse, df, n, p) %>% 
  mutate(mse = sse / df) # mse = sigma squared 
)
```

2. Calculate SSE, df and MSE for if H0 is TRUE (i.e. reduced model)

```{r, message = FALSE, warning = FALSE}
reduced <- data %>%  
  mutate(fit = mean(num_var)) %>% #in reduced model, fit is the overall mean 
  mutate(error = fit - num_var) %>% 
  mutate(sq_error = error ^ 2) %>%
  ungroup() 

head(reduced, 3)

(reduced <- reduced %>% 
  summarise(n = n(), sse = sum(sq_error)) %>% # sse = sum square error
  mutate(p = 1) %>% 
  mutate(df = n - p) %>% 
  select(sse, df, n, p)
)
```

3. Calculate the _extra_ SSE, df and MSE explained by the complete model. 

```{r, message = FALSE, warning = FALSE}
(extra_sse <- reduced$sse - complete$sse)

(extra_df <- reduced$df - complete$df)

(extra_mse <- extra_sse / extra_df)
```

4. Calculate the ratio of _extra_ variance (i.e. MSE) the complete model has explained to the variance (i.e. MSE) in the complete model itself. 

```{r, message = FALSE, warning = FALSE}
(f <- extra_mse / complete$mse)

pf(f, extra_df, complete$df, lower.tail = F)
```

There was a p < 0.05, so we will reject the null hyothesis, and accept that there is a statistically significant difference between the means of the factor levels.

Let's check whether we got it right.

```{r, message = FALSE, warning = FALSE}
anova <- aov(num_var ~ cat_var, data)
summary(anova)
```

Nice one!