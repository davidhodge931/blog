<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on David Hodge</title>
    <link>https://davidhodge931.netlify.app/post/</link>
    <description>Recent content in Posts on David Hodge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://davidhodge931.netlify.app/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>simplevis: making leaflet sf maps</title>
      <link>https://davidhodge931.netlify.app/2021/07/12/simplevis-making-leaflet-sf-maps/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/07/12/simplevis-making-leaflet-sf-maps/</guid>
      <description>library(simplevis)library(dplyr)library(palmerpenguins)Introductionsimplevis provides gglot2 (and leaflet) wrapper functions with an objective to help users make beautiful visualisation with less brainpower.
This post will discuss the leaflet wrappers that have been provided to make leaflet easier to work with.The way these functions have been designed is to follow the logic of the ggplot2 wrapper functions.
sf objectsThe sf package makes it easy to work with vector data (e.</description>
    </item>
    
    <item>
      <title>simplevis: interactive plots with plotly::ggplotly</title>
      <link>https://davidhodge931.netlify.app/2021/07/04/simplevis-making-interactive-plots-with-plotly-ggplotly/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/07/04/simplevis-making-interactive-plots-with-plotly-ggplotly/</guid>
      <description>library(simplevis)library(dplyr)library(palmerpenguins)Introductionsimplevis provides gglot2 (and leaflet) wrapper functions with an objective to help users make beautiful visualisation with less brainpower.
In the current post, we discus how to make yoursimplevis ggplot2 plots interactive html widgets using plotly::ggplotly, including how to fine-tune your tooltips.
Make sure you have the latest version of simplevis from CRAN, so that everything runs smoothly (and also that you can access the gg_density* family, which has just been released).</description>
    </item>
    
    <item>
      <title>simplevis: adjusting titles and scales</title>
      <link>https://davidhodge931.netlify.app/2021/06/27/scales-with-simplevis/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/06/27/scales-with-simplevis/</guid>
      <description>library(simplevis)library(dplyr)library(palmerpenguins)Introductionsimplevis provides gglot2 (and leaflet) wrapper functions with an objective to help users make beautiful visualisation with less brainpower.
In the current post, we discus how to adjust titles and scales within simplevis.
TitlesDefault titles in simplevis try to provide a polished quick graph with minimal code by:
having no title, subtitle or captionconverting x, y and colour titles to sentence case using the snakecase::to_sentence_case function.</description>
    </item>
    
    <item>
      <title>simplevis: working with colour</title>
      <link>https://davidhodge931.netlify.app/2021/06/20/colouring-with-simplevis/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/06/20/colouring-with-simplevis/</guid>
      <description>Introductionsimplevis provides gglot2 (and leaflet) wrapper functions with an objective to help users make beautiful visualisation with less brainpower.
In the current post, we will discus the simplified and consistent method for colouring that simplevis has adopted.
OverviewIn simplevis, users adhere to the following rules for adjusting colour:
Always define the colours to use via the pal argument (short for palette)If colouring by a variable, use a *_col() or *_col_facet() function, and define the col_varFor gg_sf_col*() and gg_point_col*() functions where the col_var is numeric, also define the col_method of bin or quantile, and the col_cuts to use.</description>
    </item>
    
    <item>
      <title>simplevis: visualisation made easier</title>
      <link>https://davidhodge931.netlify.app/2021/06/07/introducing-simplevis/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/06/07/introducing-simplevis/</guid>
      <description>Introductionsimplevis is a package of ggplot2 wrapper functions that aims to make beautiful ggplot2 visualisation with less brainpower and typing!
This blog will provide an overview of:
the visualisation family types that simplevis currently supportshow visualisation families support combinations of colouring (by a variable), facetting. both or neither.library(simplevis)library(dplyr)library(palmerpenguins)Visualisation family typesbar
plot_data &amp;lt;- storms %&amp;gt;%group_by(year) %&amp;gt;%summarise(wind = mean(wind))gg_bar(plot_data, year, wind)point</description>
    </item>
    
    <item>
      <title>Statistics common notation</title>
      <link>https://davidhodge931.netlify.app/2021/05/18/statistics-common-notation/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/05/18/statistics-common-notation/</guid>
      <description>Statistics notation is very easy in Rmarkdown.
Below a list of common components of statistics notation for reference.
Greek parameters
\(\mu\)
$\mu$ \(\alpha\)
$\alpha$ \(\beta\)
$\beta$ \(\gamma\)
$\gamma$ \(\tau\)
$\tau$ \(\sigma\)
$\sigma$ Subscript
\(H_0\)
$H_0$ \(Y_{ij}\)
$Y_{ij}$ Superscript
\(\sigma^2\)
$\sigma^2$ Hats and bars
\(\hat{Y}\)
$\hat{Y}$ \(\bar{Y}\)
$\bar{Y}$ \(\hat{f}_i\)
$\hat{f}_i$ Operators
\(\ge\)
$\ge$ \(\le\)
$\le$ \(\neq\)</description>
    </item>
    
    <item>
      <title>One-way ANOVA by hand</title>
      <link>https://davidhodge931.netlify.app/2021/05/08/one-way-anova-by-hand/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://davidhodge931.netlify.app/2021/05/08/one-way-anova-by-hand/</guid>
      <description>One-way ANOVA is a test used to assess whether there is a statistically significant difference between the mean of groups.
There is 1 response numeric variable and 1 explanatory categorical variable with more than 1 level.
ANOVA considers the probability of observing the sample ratio of explained variance to unexplained variance (i.e. the F statistic)&amp;hellip; if the null hypothesis is true that all population means are equal.
The higher this ratio of explained to unexplained variance is (i.</description>
    </item>
    
  </channel>
</rss>
